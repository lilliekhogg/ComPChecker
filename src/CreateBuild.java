
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Luke
 */
public class CreateBuild extends javax.swing.JFrame {

    String myPart = "";
    int motherboard;
    int CPU;
    int RAM;
    int storage;
    int GPU;
    int PSU;
    int PCCase;
    int cooler;
    int accessory;
    String name;
    String username;
    ArrayList<Integer> Parts = new ArrayList<Integer>();
    UserAccount currentUser;

    Build build = new Build();

    /**
     * Default constructor for CreateBuild.
     */
    CreateBuild() {
        initComponents();
        this.setTitle("Edit Build");     //Adds a title to the frame
        setLocationRelativeTo(null);
    }

    /**
     * Constructor for CreateBuild with user parameter.
     *
     * @param user This determines who the user is so they can be returned to
     * the correct menu with the appropriate options.
     */
    CreateBuild(UserAccount user) {
        username = user.getUsername();
        initComponents();
        this.setTitle("Create Build");     //Adds a title to the frame - need this to change bassed on option
        setLocationRelativeTo(null);
        currentUser = user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnProcessor = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnRAM = new javax.swing.JButton();
        txtboxName = new javax.swing.JTextField();
        btnMotherboard = new javax.swing.JButton();
        btnGraphics = new javax.swing.JButton();
        btnStorage = new javax.swing.JButton();
        btnCase = new javax.swing.JButton();
        btnPowerSup = new javax.swing.JButton();
        btnCooling = new javax.swing.JButton();
        lblLogo = new javax.swing.JLabel();
        btnAccessories = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnProcessor.setText("Processor");
        btnProcessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessorActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lato", 0, 13)); // NOI18N
        jLabel1.setText("Build Name:");

        btnRAM.setText("RAM");
        btnRAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRAMActionPerformed(evt);
            }
        });

        btnMotherboard.setText("Motherboard");
        btnMotherboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMotherboardActionPerformed(evt);
            }
        });

        btnGraphics.setText("Graphics Card");
        btnGraphics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraphicsActionPerformed(evt);
            }
        });

        btnStorage.setText("Storage");
        btnStorage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStorageActionPerformed(evt);
            }
        });

        btnCase.setText("Case");
        btnCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaseActionPerformed(evt);
            }
        });

        btnPowerSup.setText("Power Supply");
        btnPowerSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPowerSupActionPerformed(evt);
            }
        });

        btnCooling.setText("Cooling");
        btnCooling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCoolingActionPerformed(evt);
            }
        });

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N

        btnAccessories.setText("Accessories");
        btnAccessories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccessoriesActionPerformed(evt);
            }
        });

        btnConfirm.setBackground(new java.awt.Color(0, 255, 0));
        btnConfirm.setText("✔");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(255, 0, 0));
        btnCancel.setText("✘");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jButton1.setText("Return to Menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLogo)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(btnProcessor, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnRAM, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnMotherboard, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnGraphics, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnStorage, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCase, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnPowerSup, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCooling, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnAccessories, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtboxName, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(162, 162, 162))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtboxName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnProcessor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMotherboard)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRAM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGraphics)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStorage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPowerSup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCooling)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAccessories)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * getPart is a method used for debugging and checking the 'type' of part
     * passed.
     *
     * @return Returns the 'type' of part, e.g. CPU.
     */
    public String getPart() {
        System.out.println(myPart);
        return myPart;
    }

    /**
     * Opens new form for user to choose CPU.
     */
    private void btnProcessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessorActionPerformed
        myPart = "CPU";
        SelectComponent frm = new SelectComponent(myPart, this, null); //
        frm.setVisible(true);
    }//GEN-LAST:event_btnProcessorActionPerformed

    /**
     * Opens new form for user to choose RAM.
     */
    private void btnRAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRAMActionPerformed
        myPart = "RAM";
        SelectComponent frm = new SelectComponent(myPart, this, null); //
        frm.setVisible(true);
    }//GEN-LAST:event_btnRAMActionPerformed

    /**
     * Opens new form for user to choose motherboard.
     */
    private void btnMotherboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMotherboardActionPerformed
        myPart = "Motherboard";
        SelectComponent frm = new SelectComponent(myPart, this, null); //
        frm.setVisible(true);
    }//GEN-LAST:event_btnMotherboardActionPerformed

    /**
     * Opens new form for user to choose GPU.
     */
    private void btnGraphicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraphicsActionPerformed
        myPart = "GPU";
        SelectComponent frm = new SelectComponent(myPart, this, null); //
        frm.setVisible(true);
    }//GEN-LAST:event_btnGraphicsActionPerformed

    /**
     * Opens new form for user to choose storage.
     */
    private void btnStorageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStorageActionPerformed
        myPart = "Storage";
        SelectComponent frm = new SelectComponent(myPart, this, null); //
        frm.setVisible(true);
    }//GEN-LAST:event_btnStorageActionPerformed

    /**
     * Opens new form for user to choose a case.
     */
    private void btnCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaseActionPerformed
        myPart = "Case";
        SelectComponent frm = new SelectComponent(myPart, this, null); //
        frm.setVisible(true);
    }//GEN-LAST:event_btnCaseActionPerformed

    /**
     * Opens new form for user to choose PSU.
     */
    private void btnPowerSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPowerSupActionPerformed
        myPart = "PSU";
        SelectComponent frm = new SelectComponent(myPart, this, null); //
        frm.setVisible(true);
    }//GEN-LAST:event_btnPowerSupActionPerformed

    /**
     * Opens new form for user to choose a cooler.
     */
    private void btnCoolingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCoolingActionPerformed
        myPart = "Cooler";
        SelectComponent frm = new SelectComponent(myPart, this, null); //
        frm.setVisible(true);
    }//GEN-LAST:event_btnCoolingActionPerformed

    /**
     * Opens new form for user to choose an accessory.
     */
    private void btnAccessoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccessoriesActionPerformed
        myPart = "Accessory";
        SelectComponent frm = new SelectComponent(myPart, this, null); //
        frm.setVisible(true);
    }//GEN-LAST:event_btnAccessoriesActionPerformed

    /**
     * Confirms the user's part choices and saves into the database.
     */
    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        String buildName = txtboxName.getText();

        if (buildName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please complete the build name field.", "Please complete fields", JOptionPane.INFORMATION_MESSAGE);
        } else {
            ArrayList<Integer> IDs = new ArrayList<Integer>();
            IDs.add(motherboard);
            IDs.add(CPU);
            IDs.add(RAM);
            IDs.add(storage);
            IDs.add(GPU);
            IDs.add(PSU);
            IDs.add(PCCase);
            IDs.add(cooler);
            IDs.add(accessory);
            Issue check = new Issue();
            boolean issues = false;

            Connection con = DatabaseConnection.establishConnection();
            for (int i = 0; i < IDs.size(); i++) {
                for (int j = i + 1; j < IDs.size(); j++) {
                    boolean result = check.compatbilityIssue(IDs.get(i), IDs.get(j), con);
                    if (result) {
                        issues = true;
                    }
                }
            }

            JOptionPane.showMessageDialog(null, "We will now check your components are compatable. Please wait..", "Please wait.", JOptionPane.INFORMATION_MESSAGE);
            if (issues) {
                JOptionPane.showMessageDialog(null, "WARNING. Issues have been deceted between the selected parts. Please chose different parts..", "WARNING", JOptionPane.INFORMATION_MESSAGE);
            } else {
                saveBuild();
                this.setVisible(false);
                new CreateBuild(currentUser).setVisible(true);       //Resets components when build is saved
            }
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    /**
     * Sets each part to it's chosen value and saves.
     */
    private void saveBuild() {
        getPart();
        Build myBuild = new Build();
        myBuild.CPU = CPU;
        myBuild.motherboard = motherboard;
        myBuild.RAM = RAM;
        myBuild.GPU = GPU;
        myBuild.PCCase = PCCase;
        myBuild.PSU = PSU;
        myBuild.cooler = cooler;
        myBuild.accessory = accessory;
        myBuild.name = txtboxName.getText();
        myBuild.storage = storage;
        myBuild.username = username;

        myBuild.SaveBuild();
    }

    /**
     * Returns the user to the appropriate menu based on their user type.
     */
    private void returnToMenu() {
        this.setVisible(false);
        if (currentUser.getType() == true) {        //User is admin
            new AdminMenu(currentUser).setVisible(true);
        } else {
            new MainMenu(currentUser).setVisible(true);
        }
    }

    /**
     * Clicking calls returnToMenu() to return the user to the menu.
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        returnToMenu();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    /**
     * User cancels creating a build and returns to the menu on confirmation.
     */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed

        String message = "Do you wish to cancel without saving?";
        int answer = JOptionPane.showConfirmDialog(this, message);
        if (answer == JOptionPane.YES_OPTION) {
            // User clicked YES.
            returnToMenu();
        } else if (answer == JOptionPane.NO_OPTION) {
            // User clicked NO.
            // Nothing happens
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * Updates the database with the new build and refreshes the parts.
     */
    public void refreshParts() {

        Parts.clear();
        if (CPU != 0) {
            Parts.add(CPU);
        }
        if (motherboard != 0) {
            Parts.add(motherboard);
        }
        if (RAM != 0) {
            Parts.add(RAM);
        }
        if (storage != 0) {
            Parts.add(storage);
        }
        if (GPU != 0) {
            Parts.add(GPU);
        }
        if (PSU != 0) {
            Parts.add(PSU);
        }
        if (PCCase != 0) {
            Parts.add(PCCase);
        }
        if (cooler != 0) {
            Parts.add(cooler);
        }
        if (accessory != 0) {
            Parts.add(accessory);
        }
        System.out.println(Parts);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnAccessories;
    private javax.swing.JButton btnCancel;
    public javax.swing.JButton btnCase;
    private javax.swing.JButton btnConfirm;
    public javax.swing.JButton btnCooling;
    public javax.swing.JButton btnGraphics;
    public javax.swing.JButton btnMotherboard;
    public javax.swing.JButton btnPowerSup;
    public javax.swing.JButton btnProcessor;
    public javax.swing.JButton btnRAM;
    public javax.swing.JButton btnStorage;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JTextField txtboxName;
    // End of variables declaration//GEN-END:variables
}
