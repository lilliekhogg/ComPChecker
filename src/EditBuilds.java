
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *This class represents the Edit Build Form.
 * @author Luke
 * @author Tom
 * @author Lillie
 */
public class EditBuilds extends javax.swing.JDialog {

    UserAccount currentUser;

    /**
     * Creates new form EditBuilds.
     * This is all run on start of form.
     * @param user the current user which build is being edited..
     */
    public EditBuilds(UserAccount user) {
        initComponents();
        currentUser = user;

        this.setTitle("Edit Builds");     //Adds a title to the frame
        setLocationRelativeTo(null);    //Centers the frame in the middle of ths screen
        TableColumn col = new TableColumn();
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        jTable.addColumn(col);
        model.addColumn("Name");
        model.addColumn("CPU");
        model.addColumn("Mobo");
        model.addColumn("RAM");
        model.addColumn("GPU");
        model.addColumn("Storage");
        model.addColumn("Case");
        model.addColumn("PSU");
        model.addColumn("Cooler");
        model.addColumn("Accessory");
        Connection con = DatabaseConnection.establishConnection();

        try {
            Statement stmt = (Statement) con.createStatement();
            boolean Admin = user.getType();
            String query;
            if (Admin) {
                query = ("Select name,CPU,Motherboard,RAM,GPU,Storage,PCCase,PSU,Cooler,Accessory From Build ORDER BY ID ASC"); //If admin return all builds 
            } else {
                String username = user.getUsername();
                query = ("Select name,CPU,Motherboard,RAM,GPU,Storage,PCCase,PSU,Cooler,Accessory From Build Where Account = '" + username + "'ORDER BY ID ASC"); //Else return own builds.

            }

            stmt.executeQuery(query);
            ResultSet rs = stmt.getResultSet();
            while (rs.next()) {
                String buildname = rs.getString("name");
                String cpu = getMakeModel(rs.getInt("CPU"));
                String motherboard = getMakeModel(rs.getInt("Motherboard"));
                String ram = getMakeModel(rs.getInt("RAM"));
                String gpu = getMakeModel(rs.getInt("GPU"));
                String storage = getMakeModel(rs.getInt("Storage"));
                String pccase = getMakeModel(rs.getInt("PCCase"));
                String psu = getMakeModel(rs.getInt("PSU"));
                String cooler = getMakeModel(rs.getInt("Cooler"));
                String accessory = getMakeModel(rs.getInt("Accessory"));

                model.addRow(new Object[]{buildname, cpu, motherboard, ram, gpu, storage, pccase, psu, cooler, accessory});
            }
        } catch (SQLException err) {
            System.out.println(err.getMessage());   //Prints out SQL error 
        }

    }
/**
 * 
 * @param ID takes an int part ID.
 * @return the make and model of the given ID.
 */
    private String getMakeModel(int ID) {
        Connection con = DatabaseConnection.establishConnection();
        
        String make = null; //Intialise variables
        String model= null;
        try {
            Statement stmt = (Statement) con.createStatement();
            String query = ("SELECT * FROM Part Where PartID ='" + ID + "'");       //Selet part from database
            stmt.executeQuery(query);
            ResultSet rs = stmt.getResultSet();
            while (rs.next()) {
                make = rs.getString("Make");            //Get data
                model = rs.getString("Model");

            }
            String makeModel = (make + " " + model);

            return makeModel;   //Return string to be displayed on form.
        } catch (SQLException err) {
            System.out.println(err.getMessage());   //Prints out SQL error 
        }
        return null;
    }

    private EditBuilds() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    jTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTableMouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable);

    btnEdit.setText("Edit");
    btnEdit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnEditActionPerformed(evt);
        }
    });

    btnClose.setText("Close");
    btnClose.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnCloseActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnClose)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnEdit)
            .addGap(365, 365, 365))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnClose)
                .addComponent(btnEdit))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int row = jTable.getSelectedRow();
        String buildname = jTable.getModel().getValueAt(row, 0).toString(); // 0 for the column because that's the name column
        String[] options = new String[]{"Edit", "Delete", "Compare Build", "Share Build", "Cancel"};
        int response = JOptionPane.showOptionDialog(null, "What would you like to do with this build " + currentUser + "?", "Title",
                JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE,
                null, options, options[0]);
        Build myBuild = new Build();
        myBuild.setName(buildname);
        if (response == 0) {
            //edit
            this.setVisible(false);

            EditBuild newForm = new EditBuild(currentUser, myBuild);
            newForm.setVisible(true);
        } else if (response == 1) {
            //Delete
            myBuild.deleteBuild();

        } else {
            //Cancel
        }

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.setVisible(false);
        new AdminMenu(currentUser).setVisible(true); //Returns to admin menu
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditBuilds dialog = new EditBuilds(); //?
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnEdit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
