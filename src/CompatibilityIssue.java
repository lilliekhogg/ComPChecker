
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Luke
 */
public class CompatibilityIssue extends javax.swing.JFrame {

    UserAccount currentUser;
    int ID1, ID2;

    Issue myIssue = new Issue();

    /**
     * Default constructor for CompatibilityIssue.
     */
    public CompatibilityIssue() {
        initComponents();
    }

    /**
     * Constructor for CompatibilityIssue taking user parameter. This is the
     * constructor called when the form is called from the menu initially.
     *
     * @param user The constructor is passed the user parameter which
     * currentUser is then set to which allows it to be accessed throughout the
     * form.
     */
    CompatibilityIssue(UserAccount user) {
        initComponents();
        this.setTitle("Compatibility");     //Adds a title to the frame
        setLocationRelativeTo(null);    //Centers the frame in the middle of ths screen
        currentUser = user;

    }

    /**
     * Constructor for CompatibilityIssue taking user parameter. This is the
     * constructor called when the form is called again internally along with
     * the first issue object.
     *
     * @param issue This is the first 'issue' which is an incompatible part.
     * @param user The constructor is passed the user parameter which
     * currentUser is then set to which allows it to be accessed throughout the
     * form.
     */
    CompatibilityIssue(UserAccount user, Issue issue) {
        initComponents();
        this.setTitle("Compatibility");     //Adds a title to the frame
        setLocationRelativeTo(null);    //Centers the frame in the middle of ths screen
        currentUser = user;
        myIssue = issue;

        if (myIssue.getID1() != 0) {
            btnPart1.setText(getMakeModel(myIssue.getID1()));

        } else {
            btnPart1.setText("Select Part");
        }

        if (myIssue.getID2() != 0) {
            btnPart2.setText(getMakeModel(myIssue.getID2()));

        } else {
            btnPart2.setText("Select Part");
        }

    }

    /**
     * This method gets the makes and models to display from the part IDs.
     *
     * @param ID The ID of the part to be formatted.
     */
    private String getMakeModel(int ID) {
        Connection con = DatabaseConnection.establishConnection();

        String make = null; //Intialise variables
        String model = null;
        try {
            Statement stmt = (Statement) con.createStatement();
            String query = ("SELECT * FROM Part Where PartID ='" + ID + "'");       //Selet part from database
            stmt.executeQuery(query);
            ResultSet rs = stmt.getResultSet();
            while (rs.next()) {
                make = rs.getString("Make");            //Get data
                model = rs.getString("Model");

            }
            String makeModel = (make + " " + model);

            return makeModel;   //Return string to be displayed on form.
        } catch (SQLException err) {
            System.out.println(err.getMessage());   //Prints out SQL error 
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLogo = new javax.swing.JLabel();
        btnPart1 = new javax.swing.JButton();
        btnPart2 = new javax.swing.JButton();
        btnStore = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N
        lblLogo.setText("jLabel1");

        btnPart1.setText("Choose Part 1");
        btnPart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPart1ActionPerformed(evt);
            }
        });

        btnPart2.setText("Choose Part 2");
        btnPart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPart2ActionPerformed(evt);
            }
        });

        btnStore.setText("Store Incompatibility");
        btnStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStoreActionPerformed(evt);
            }
        });

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPart2)
                            .addComponent(btnPart1)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(btnStore))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnReturn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblLogo)
                .addGap(18, 18, 18)
                .addComponent(btnPart1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPart2)
                .addGap(30, 30, 30)
                .addComponent(btnStore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(btnReturn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Prompts the user to select a type of part. From here they then select the
     * part (part1) they want to make incompatible with the other part (part2).
     */
    private void btnPart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPart1ActionPerformed
        String[] choices = {"Accessory", "CPU", "Cooler", "GPU", "Motherboard", "Case", "PSU", "RAM", "Storage"};
        String input = (String) JOptionPane.showInputDialog(null, "Which type of part is being editted?",
                "Edit Component", JOptionPane.QUESTION_MESSAGE, null, // Use
                // default
                // icon
                choices, // Array of choices
                choices[0]); // Initial choice
        String myPart;
        EditComponent frm; //
        switch (input) {

            case "Accessory":
                myPart = "Accessory";
                frm = new EditComponent(myPart, 1, currentUser, myIssue); //
                this.setVisible(false);
                frm.setVisible(true);
                break;

            case "CPU":
                myPart = "CPU";
                frm = new EditComponent(myPart, 1, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "Motherboard":
                myPart = "Motherboard";
                frm = new EditComponent(myPart, 1, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "RAM":
                myPart = "RAM";
                frm = new EditComponent(myPart, 1, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "PSU":
                myPart = "PSU";
                frm = new EditComponent(myPart, 1, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "Cooler":
                myPart = "Cooler";
                frm = new EditComponent(myPart, 1, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "GPU":
                myPart = "GPU";
                frm = new EditComponent(myPart, 1, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "Case":
                myPart = "Case";
                frm = new EditComponent(myPart, 1, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "Storage":
                myPart = "Storage";
                frm = new EditComponent(myPart, 1, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
        }

    }//GEN-LAST:event_btnPart1ActionPerformed

    /**
     * Prompts the user to select a type of part. From here they then select the
     * other part (part2) they wanted to make incompatible with the first part
     * (part1).
     */
    private void btnPart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPart2ActionPerformed
        String[] choices = {"Accessory", "CPU", "Cooler", "GPU", "Motherboard", "Case", "PSU", "RAM", "Storage"};
        String input = (String) JOptionPane.showInputDialog(null, "Which type of part is being editted?",
                "Edit Component", JOptionPane.QUESTION_MESSAGE, 
                null, // Use default icon
                choices, // Array of choices
                choices[0]); // Initial choice
        String myPart;
        EditComponent frm; //
        switch (input) {

            case "Accessory":
                myPart = "Accessory";
                frm = new EditComponent(myPart, 2, currentUser, myIssue); //
                this.setVisible(false);
                frm.setVisible(true);
                break;

            case "CPU":
                myPart = "CPU";
                frm = new EditComponent(myPart, 2, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "Motherboard":
                myPart = "Motherboard";
                frm = new EditComponent(myPart, 2, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "RAM":
                myPart = "RAM";
                frm = new EditComponent(myPart, 2, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "PSU":
                myPart = "PSU";
                frm = new EditComponent(myPart, 2, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "Cooler":
                myPart = "Cooler";
                frm = new EditComponent(myPart, 2, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "GPU":
                myPart = "GPU";
                frm = new EditComponent(myPart, 2, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "Case":
                myPart = "Case";
                frm = new EditComponent(myPart, 2, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
            case "Storage":
                myPart = "Storage";
                frm = new EditComponent(myPart, 2, currentUser, myIssue);
                this.setVisible(false);
                frm.setVisible(true);
                break;
        }
    }//GEN-LAST:event_btnPart2ActionPerformed

    /**
     * Saves the part incompatibility (or 'issue') in the database.
     */
    private void btnStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStoreActionPerformed
        myIssue.saveIssue(myIssue.getID1(), myIssue.getID2());
    }//GEN-LAST:event_btnStoreActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        this.setVisible(false);
        new AdminMenu(currentUser).setVisible(true);
    }//GEN-LAST:event_btnReturnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPart1;
    private javax.swing.JButton btnPart2;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnStore;
    private javax.swing.JLabel lblLogo;
    // End of variables declaration//GEN-END:variables
}
